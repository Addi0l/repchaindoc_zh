故障排除和常见问题
========================

12.1. repChain答疑
-----------------------

12.1.1 背书
++++++++++++++++

	问题：多少个网络中的节点需要对交易进行背书？
	
	答案：需要对交易进行背书操作的节点数量由背书策略决定，背书策略在链码部署的时候指定。

	问题：应用需要连接到所有节点吗？
	
	答案：应用只需要连接到链码对应的背书策略所要求的足够多的节点。

12.1.2 安全和权限控制
+++++++++++++++++++++++

	问题：我如何能够保证数据的隐私？
	
	答案：数据隐私包括几个方面。
	
		第一、你可以将你的网络拆分为多个通道，每个通道代表参与者的子集，这些参与者有权访问该通道所部署的链码所包含的数据。
		
		第二、通过通道你可以限制链码的输入数据只对背书节点可见。可见性设置将决定链码的输入输出数据是否包含在提交交易中，可以只包含输出数据。
		
		第三、你能在调用链码前对数据进行哈希操作或者加密。如果对数据进行哈希操作，你需要提供获取原数据的方式。如果对数据进行加密，你需要提供获取密钥的方式。
		
		第四、你可以通过链码中的访问控制逻辑限制数据访问权限，只有机构中特定的角色可以访问。
		
		第五、节点中的账本数据可以通过文件系统进行加密，节点间数据传输通过TLS进行加密。

	问题：排序节点能否看到交易数据？
	
	答案：不能，排序节点只是排序交易，不能解析交易。如果你只关心输入数据，不希望经过排序节点，你可以使用可见性设置。可见性设置将决定链码的输入输出数据是否包含在提交交易中，可以只包含输出数据，这样只有背书节点能看到输入数据。如果你不希望排序节点看到交易输出数据，你能在调用链码前对数据进行哈希操作或者加密。如果对数据进行哈希操作，你需要提供获取原数据的方式。如果对数据进行加密，你需要提供获取密钥的方式。

12.1.3 应用端编程模型
++++++++++++++++++++++++++++

	问题：应用如何知道交易的输出？
	
	答案：背书节点会返回提案模拟交易的结果。如果有多个背书节点，应用能检查返回结果是否相同后再提交交易结果以及排序和生效所需要的背书。最终，生效节点会验证交易是否合法，通过SDK提供的事件通知方式接收交易结果。

	问题：如何查询账本数据？
	
	答案：通过链码可以通过键值查询数据。可以对键值进行范围查询，复合主键可以允许查询出部分键值相同的值，例如由 (owner,asset_id) 组成的复合主键可以用来查询特定实体所拥有的所有asset。

12.1.4 链码
+++++++++++++++++

	问题：repChain是否支持智能合约逻辑？
	
	答案：是的，链码是部署在网络中的程序代码，通过共识流程被链的验证者共同执行并验证。开发者能使用链码来开发商业合同、资产定义和集体管理的去中心化应用。

	问题：链码支持哪些语言？
	
	答案：链码可以使用js和scala编程语言编写并在容器内执行。

12.1.5最近版本区别
++++++++++++++++++++++++

	问题：版本更新对文档是否有影响？
	
	答案：不同版本有各自的文档，可以进行一一对应。
